// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
  output   = "../src/generated/prisma"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model user {
  id                   String             @id @default(uuid())
  fullname             String
  email                String             @unique @db.VarChar(255)
  password             String?
  profile_image_url    String?
  uploadedProfileImage String?
  imagePublicID        String?
  role                 String?
  createdAt            DateTime           @default(now())
  updatedAt            DateTime           @updatedAt
  username             String
  acknowledgements     acknowledgement[]
  order                order[]
  payment              payment[]
}

model Content {
  id          String   @id @default(uuid())
  title       String
  description String?
  mediaUrl    String
  thumbnailUrl String?
  isPublished Boolean  @default(false)
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
  brandId     String

  artistId    String
  artist      User     @relation(fields: [artistId], references: [id])
  brand       Brand    @relation(fields: [brandId], references: [id])
}

model Brand {
  id          String   @id @default(uuid())
  name        String
  description String?
  logoUrl     String?
  artistId    String
  artist      User     @relation(fields: [artistId], references: [id])
  products    Product[]

  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
}

model Product {
  id          String   @id @default(uuid())
  name        String
  description String?
  price       Float
  currency    String   // "USD", "ETH", etc.
  mediaUrl    String?  // Image or preview
  brandId     String
  brand       Brand    @relation(fields: [brandId], references: [id])

  isAvailable Boolean  @default(true)
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
}

